diff -r -U 3 minecraft_server/net/minecraft/src/ChunkProviderLoadOrGenerate.java minecraft_server_patched/net/minecraft/src/ChunkProviderLoadOrGenerate.java
--- minecraft_server/net/minecraft/src/ChunkProviderLoadOrGenerate.java	2021-10-05 16:05:43.145227000 -0400
+++ minecraft_server_patched/net/minecraft/src/ChunkProviderLoadOrGenerate.java	2021-10-05 16:04:47.598204300 -0400
@@ -121,15 +121,10 @@
    }
 
    private void saveChunk(Chunk var1) {
-      if(this.chunkLoader != null) {
-         try {
-            var1.lastSaveTime = this.worldObj.worldTime;
-            this.chunkLoader.saveChunk(this.worldObj, var1);
-         } catch (IOException var3) {
-            var3.printStackTrace();
-         }
-
-      }
+	   if(this.chunkLoader != null) {
+		   var1.lastSaveTime = this.worldObj.worldTime;
+		   this.chunkLoader.saveChunk(this.worldObj, var1);
+	   }
    }
 
    public void populate(IChunkProvider var1, int var2, int var3) {
diff -r -U 3 minecraft_server/net/minecraft/src/ChunkProviderServer.java minecraft_server_patched/net/minecraft/src/ChunkProviderServer.java
--- minecraft_server/net/minecraft/src/ChunkProviderServer.java	2021-10-05 16:05:43.147222000 -0400
+++ minecraft_server_patched/net/minecraft/src/ChunkProviderServer.java	2021-10-05 16:04:34.485714700 -0400
@@ -125,15 +125,10 @@
    }
 
    private void saveChunk(Chunk var1) {
-      if(this.serverChunkLoader != null) {
-         try {
-            var1.lastSaveTime = this.worldObj.worldTime;
-            this.serverChunkLoader.saveChunk(this.worldObj, var1);
-         } catch (IOException var3) {
-            var3.printStackTrace();
-         }
-
-      }
+	   if(this.serverChunkLoader != null) {
+		   var1.lastSaveTime = this.worldObj.worldTime;
+		   this.serverChunkLoader.saveChunk(this.worldObj, var1);
+	   }
    }
 
    public void populate(IChunkProvider var1, int var2, int var3) {
diff -r -U 3 minecraft_server/net/minecraft/src/NetServerHandler.java minecraft_server_patched/net/minecraft/src/NetServerHandler.java
--- minecraft_server/net/minecraft/src/NetServerHandler.java	2021-10-05 16:05:43.299985000 -0400
+++ minecraft_server_patched/net/minecraft/src/NetServerHandler.java	2021-10-05 16:04:24.518195400 -0400
@@ -104,7 +104,11 @@
             var9 = var1.pitch;
          }
 
-         this.playerEntity.onUpdateEntity();
+         try {
+        	 this.playerEntity.onUpdateEntity();
+         } catch (IOException ex) {
+        	 ex.printStackTrace();
+         }
          this.playerEntity.ySize = 0.0F;
          this.playerEntity.setPositionAndRotation(this.g, this.h, this.i, var8, var9);
          var10 = var2 - this.playerEntity.posX;
diff -r -U 3 minecraft_server/net/minecraft/src/NetworkAcceptThread.java minecraft_server_patched/net/minecraft/src/NetworkAcceptThread.java
--- minecraft_server/net/minecraft/src/NetworkAcceptThread.java	2021-10-05 16:05:43.302006000 -0400
+++ minecraft_server_patched/net/minecraft/src/NetworkAcceptThread.java	2021-10-05 16:03:57.078955200 -0400
@@ -28,7 +28,7 @@
                NetLoginHandler var2 = new NetLoginHandler(this.minecraftServer, var1, "Connection #" + NetworkListenThread.b(this.networkListenThread));
                NetworkListenThread.a(this.networkListenThread, var2);
             }
-         } catch (IOException var3) {
+         } catch (Exception var3) {
             var3.printStackTrace();
          }
       }
diff -r -U 3 minecraft_server/net/minecraft/src/World.java minecraft_server_patched/net/minecraft/src/World.java
--- minecraft_server/net/minecraft/src/World.java	2021-10-05 16:05:43.417751000 -0400
+++ minecraft_server_patched/net/minecraft/src/World.java	2021-10-05 16:04:06.630186500 -0400
@@ -1516,13 +1516,18 @@
    }
 
    public void updateTileEntityChunkAndDoNothing(int var1, int var2, int var3, TileEntity var4) {
-      if(this.blockExists(var1, var2, var3)) {
-         this.getChunkFromBlockCoords(var1, var3).setChunkModified();
-      }
-
-      for(int var5 = 0; var5 < this.worldAccesses.size(); ++var5) {
-         ((IWorldAccess)this.worldAccesses.get(var5)).doNothingWithTileEntity(var1, var2, var3, var4);
-      }
+	   if(this.blockExists(var1, var2, var3)) {
+		   this.getChunkFromBlockCoords(var1, var3).setChunkModified();
+	   }
+
+	   for(int var5 = 0; var5 < this.worldAccesses.size(); ++var5) {
+		   try {
+			   ((IWorldAccess)this.worldAccesses.get(var5)).doNothingWithTileEntity(var1, var2, var3, var4);
+		   } catch (IOException e) {
+			   // TODO Auto-generated catch block
+			   e.printStackTrace();
+		   }
+	   }
 
    }
 
